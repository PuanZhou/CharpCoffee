#pragma checksum "D:\iii\期末專題\7.12\product(改版後)\product(改版後)\slnProduct_core\prjProduct_core\Views\Home\Create.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "629cffff5feab819d083fb4d19ee2da8e088e647"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Create), @"mvc.1.0.view", @"/Views/Home/Create.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\iii\期末專題\7.12\product(改版後)\product(改版後)\slnProduct_core\prjProduct_core\Views\_ViewImports.cshtml"
using prjProduct_core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\iii\期末專題\7.12\product(改版後)\product(改版後)\slnProduct_core\prjProduct_core\Views\_ViewImports.cshtml"
using prjProduct_core.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"629cffff5feab819d083fb4d19ee2da8e088e647", @"/Views/Home/Create.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7e68a38f904a3c0064916e4a245f427c24105a01", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Create : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<prjCSCoffee.ViewModel.CMemberViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("creatform"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\iii\期末專題\7.12\product(改版後)\product(改版後)\slnProduct_core\prjProduct_core\Views\Home\Create.cshtml"
  
    ViewData["Title"] = "Create";

#line default
#line hidden
#nullable disable
            DefineSection("Style", async() => {
                WriteLiteral("\r\n    <style>\r\n        .warn {\r\n            font-size: 80%;\r\n            color: darkgray;\r\n        }\r\n    </style>\r\n\r\n");
            }
            );
            WriteLiteral(@"

<!-- ##### Breadcrumb Area Start ##### -->
<div class=""breadcrumb-area"">
    <!-- Top Breadcrumb Area -->
    <div class=""top-breadcrumb-area bg-img bg-overlay d-flex align-items-center justify-content-center"" style=""background-image: url(img/bg-img/24.jpg);"">
        <h2>註冊會員</h2>
    </div>

    <div class=""container"">
        <div class=""row"">
            <div class=""col-12"">
                <nav aria-label=""breadcrumb"">
                    <ol class=""breadcrumb"">
                        <li class=""breadcrumb-item"">
                            <a href=""#""><i class=""fa fa-home""></i> Home</a>
                        </li>
                        <li class=""breadcrumb-item active"" aria-current=""page"">註冊</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>
<!-- ##### Breadcrumb Area End ##### -->
<!-- ##### Checkout Area Start ##### -->
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "629cffff5feab819d083fb4d19ee2da8e088e6475416", async() => {
                WriteLiteral(@"
    <div class=""checkout_area mb-100"">
        <div class=""container"">
            <div class=""row justify-content-between"">
                <div class=""col-12 col-lg-7"">
                    <div class=""checkout_details_area clearfix"">
                        <h5>Billing Details</h5>

                        <div class=""row"">
                            <div class=""col-12 mb-4"">
                                <label for=""name"">姓名*</label>
                                <input type=""text"" class=""form-control"" maxlength=""50"" id=""name"" name=""MemberName"">
                            </div>
                            <div class=""col-12 mb-4"">
                                <label for=""email_address"">電子信箱*</label>
                                <input type=""email"" class=""form-control"" maxlength=""50"" id=""email"" name=""MemberEmail"">
                            </div>
                            <div class=""col-12 mb-4"">
                                <label for=""phone"">手機號碼*</label>
         ");
                WriteLiteral(@"                       <input type=""text"" class=""form-control"" maxlength=""10"" id=""phone"" name=""MemberPhone"">
                            </div>
                            <div class=""col-12 mb-4"">
                                <label for=""PW"">密碼*</label>
                                <input type=""password"" class=""form-control"" maxlength=""50"" id=""PW"" name=""MemberPassword"" placeholder=""密碼需含大小寫英數字元，且長度不得小於八"">
                            </div>
                            <div class=""col-12 mb-4"">
                                <label for=""checkPW"">確認密碼*</label>
                                <input type=""password"" class=""form-control"" maxlength=""50"" id=""checkPW"" name=""checkPW"">
                            </div>
                            <div class=""col-12 mb-4"">
                                <label for=""address"">地址*</label>
                                <input type=""text"" class=""form-control"" maxlength=""50"" id=""address"" name=""MemberAddress"">
                            </div>
        ");
                WriteLiteral(@"                    <div class=""col-12 mb-4"">
                                <label for=""birth"">生日*</label>
                                <input type=""date"" class=""form-control"" id=""birth"" name=""MemberBirthDay"">
                                <input hidden type=""text"" name=""ShoppingCarId""");
                BeginWriteAttribute("value", " value=\"", 3535, "\"", 3558, 1);
#nullable restore
#line 77 "D:\iii\期末專題\7.12\product(改版後)\product(改版後)\slnProduct_core\prjProduct_core\Views\Home\Create.cshtml"
WriteAttributeValue("", 3543, ViewBag.CARTID, 3543, 15, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(">\r\n                                <input hidden type=\"text\" name=\"BlackList\" value=\"0\">\r\n                                <input hidden type=\"text\" name=\"MemberPhoto\"");
                BeginWriteAttribute("value", " value=\"", 3725, "\"", 3752, 1);
#nullable restore
#line 79 "D:\iii\期末專題\7.12\product(改版後)\product(改版後)\slnProduct_core\prjProduct_core\Views\Home\Create.cshtml"
WriteAttributeValue("", 3733, ViewBag.DEFAULTIMG, 3733, 19, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@">
                            </div>
                        </div>

                    </div>
                </div>

                <div class=""col-12 col-lg-4"">
                    <div class=""checkout-content "">
                        <h5 class=""title--"">
                            <i>注意事項</i>
                        </h5>
                        <div class=""subtotal d-flex justify-content-between align-items-center"">
                            <h5 class=""warn"" id=""warnName"">姓名</h5>
                        </div>
                        <div class=""subtotal d-flex justify-content-between align-items-center"">
                            <h5 class=""warn"" id=""warnEmail"">電子信箱</h5>
                        </div>
                        <div class=""subtotal d-flex justify-content-between align-items-center"">
                            <h5 class=""warn"" id=""warnPhone"">手機號碼</h5>
                        </div>
                        <div class=""subtotal d-flex justify-content-between ali");
                WriteLiteral(@"gn-items-center"">
                            <h5 class=""warn"" id=""warnPW"">密碼</h5>
                        </div>
                        <div class=""subtotal d-flex justify-content-between align-items-center"">
                            <h5 class=""warn"" id=""warnCheckPW"">再次確認密碼</h5>
                        </div>
                        <div class=""subtotal d-flex justify-content-between align-items-center"">
                            <h5 class=""warn"" id=""warnAddress"">地址</h5>
                        </div>
                        <div class=""subtotal d-flex justify-content-between align-items-center"">
                            <h5 class=""warn"" id=""warnBirth"">生日格式</h5>
                        </div>
                        <div class=""checkout-btn mt-30"">
                            <button type=""submit"" class=""btn alazea-btn w-100"">註冊</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!-- ##### Checkout Area End ##### -->\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        let inputEmail = $(""#email"");
        let warnEmail = $(""#warnEmail"");

        let inputPhone = $(""#phone"");
        let warnPhone = $(""#warnPhone"");

        let inputName = $(""#name"");
        let warnName = $(""#warnName"");

        let inputPW = $(""#PW"");
        let warnPW = $(""#warnPW"");
        let re = /^.*[0-9a-zA-Z].{8,50}$/;

        let inputCheckPW = $(""#checkPW"");
        let warnCheckPW = $(""#warnCheckPW"");


        let inputAddress = $(""#address"");
        let warnAddress = $(""#warnAddress"");

        let inputbirth = $(""#birth"");
        let warnBirth = $(""#warnBirth"");


        function Emptywarn(ele,strinput) {
            ele.html(`<i class=""fa-solid fa-circle-xmark"">${strinput}不得為空</i>`).css(""color"", ""red"");
        }
        function Existwarn(ele, strinput) {
            ele.html(`<i class=""fa-solid fa-circle-xmark"">${strinput}已存在</i>`).css(""color"", ""red"");
        }
        function OKwarn(ele, strinput) {
            ele.html(`<");
                WriteLiteral(@"i class=""fa-solid fa-circle-check"">${strinput}</i>`).css(""color"", ""#73BF00"");
        }

        inputName.blur(() => {
            if (inputName.val().trim() == """") {
                Emptywarn(warnName, ""姓名"");
            }
            else {
                OKwarn(warnName, ""姓名"");
            }
        });

        inputAddress.blur(() => {
            if (inputAddress.val().trim() == """") {
                Emptywarn(warnAddress, ""地址"");
            }
            else {
                OKwarn(warnAddress, ""地址"");
            }
        });

        inputbirth.blur(() => {
            if (inputbirth.val().trim() == """") {
                Emptywarn(warnBirth, ""生日"");
            }
            else {
                OKwarn(warnBirth, ""生日"");
            }
        });

        inputPW.blur(() => {
            console.log(""dded"");
            if (re.test(inputPW.val())) {
                OKwarn(warnPW, ""密碼"");
            }
            else {
                warnPW.html(`<i class=""fa-");
                WriteLiteral(@"solid fa-circle-xmark"">密碼格式有誤</i>`).css(""color"", ""red"");
            }

        })

        inputCheckPW.blur(() => {
            console.log(""dded"");
            if (inputCheckPW.val() == inputPW.val()) {
                OKwarn(warnCheckPW, ""再次確認密碼"");
            }
            else {
                warnCheckPW.html(`<i class=""fa-solid fa-circle-xmark"">密碼不一致</i>`).css(""color"", ""red"");
            }

        })



        inputEmail.blur(async () => {
            if (inputEmail.val().trim() == """") {
                Emptywarn(warnEmail, ""信箱"");
            }
            else {
                const namerespon = await fetch('");
#nullable restore
#line 216 "D:\iii\期末專題\7.12\product(改版後)\product(改版後)\slnProduct_core\prjProduct_core\Views\Home\Create.cshtml"
                                           Write(Url.Content("~/MemberFactory/QueryMemEmail"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + `?MemberEmail=${inputEmail.val()}`)
                const namedata = namerespon.text();
                namedata.then(datas => {    //datas 會是傳過來的bool

                    if (datas == ""True"") {
                        Existwarn(warnEmail, ""信箱"");
                    }
                    else {
                        OKwarn(warnEmail, ""信箱"");
                    }
                });
            }

        });

        inputPhone.blur(async () => {
            if (inputPhone.val().trim() == """") {
                Emptywarn(warnPhone, ""手機"");
            }
            else {
                const phonerespon = await fetch('");
#nullable restore
#line 236 "D:\iii\期末專題\7.12\product(改版後)\product(改版後)\slnProduct_core\prjProduct_core\Views\Home\Create.cshtml"
                                            Write(Url.Content("~/MemberFactory/QueryMemPhone"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + `?MemberEmail=${inputPhone.val()}`)
                const phonedata = phonerespon.text();
                phonedata.then(datas => {    //datas 會是傳過來的bool

                    if (datas == ""True"") {
                        Existwarn(warnPhone, ""手機"");
                    }
                    else {
                        OKwarn(warnPhone, ""手機"");
                    }
                });
            }

        });

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<prjCSCoffee.ViewModel.CMemberViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
